steps:
- bash: |
    MIRROR_VERSION=$(date +%Y%m%d%H%M%S-%N)
    echo "MIRROR_VERSION=$MIRROR_VERSION"
    echo "##vso[task.setvariable variable=MirrorVersion;isOutput=true]$MIRROR_VERSION"
  name: InitStep
  displayName: "Init Step"
- template: ../templates/debian-mirror-init-agent.yml
- template: ../templates/debian-mirror-init-storage.yml
  parameters:
    nfsMountPoint: '/$(NFSName)'
- bash: |
    set -e
    az login -u $(ApplicationId) --service-principal --tenant $(AzureTenant) -p "$ApplicationKey"
    resource_group=$(CDNResourceGroup)
    endpoint_name=$(CDNEndpointName)
    cdn_profile=$(CDNProfile)
    cdn_replicaorigin_name=$(CDNReplicaOriginName)
    origin_replica=$(az cdn origin show -g "$resource_group" --endpoint-name "$endpoint_name" -n "$cdn_replicaorigin_name"  --profile-name "$cdn_profile")
    echo "$origin_replica"
    priority=$(echo "$origin_replica" | grep priority | sed -e "s/.*priority.:\s*//" | cut -d, -f1)
    echo "The origin priority is $priority"
    if [ "$priority" != "4" ]; then
        echo "The expected priority of the origin $cdn_replicaorigin_name in cdn endpoint $endpoint_name is 4, but the priority is $priority" 2>&1
        exit 1
    fi
  env:
    ApplicationKey: '$(ApplicationKey)'
    AZURE_CONFIG_DIR: '.azureconfig'
  displayName: 'Check CDN Endpoint status'
- bash: |
    set -e
    APTLY_LOCK_PATH=work/_aptly/.lockdir
    mkdir $APTLY_LOCK_PATH
    touch $APTLY_LOCK_PATH/.lockfile
  displayName: 'Set lock file'
