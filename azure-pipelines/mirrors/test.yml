# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool: sonic-mirror-build-2
variables:
- group: SONiC-Azure-Key-Vault
- group: Debian-Mirror-Common
- group: SONiC-Mirror-US-East-1 
- name: StorageAccount
  value: 'sonicstoragepublic2'
- name: StorageAccountSasToken
  value: $(sonicstoragepublic2-SasToken)
- name: StorageAccountReplica
  value: 'sonicstoragepublic3'
- name: StorageAccountReplicaSasToken
  value: $(sonicstoragepublic3-SasToken)

stages:
- stage: test
  jobs:
  - template: ../templates/jobs-template-test.yml
    parameters:
      jobVariables:
        MIRROR_COMPONENTS: 'contrib,non-free,main'
        MIRROR_ARICHTECTURES: 'amd64,armhf,arm64'
      preSteps:
      - script: |
          echo "StorageAccountReplica=$(StorageAccountReplica)"
          echo "StorageAccount=$(StorageAccount)"
          echo "MIRROR_FILESYSTEM=$MIRROR_FILESYSTEM"
          echo "MIRROR_URL=$MIRROR_URL"
          echo "MIRROR_DISTRIBUTIONS=$MIRROR_DISTRIBUTIONS"
          echo "MIRROR_COMPONENTS=$MIRROR_COMPONENTS"
          echo "MIRROR_ARICHTECTURES=$MIRROR_ARICHTECTURES"
          echo "MIRROR_VERSION=$MIRROR_VERSION"
          echo "GROUP_NAME=$GROUP_NAME"
          echo "GROUP_NAMES=$GROUP_NAMES"
          echo "UpdateMirror=$(UpdateMirror)"
          echo "SourceBranchName=$(Build.SourceBranchName)"
          echo "SourceBranch=$(Build.SourceBranch)"
          echo "Build.Repository.Name=$(Build.Repository.Name)"
          echo "$GROUP_NAMES"
        displayName: 'Print Parameters'
      - script: |
          echo "UPDATE_MIRROR=$UPDATE_MIRROR"
        env:
          PASSPHRASE: $(sonic-gpg-passphrase)
          GPG_KEY: $(sonic-gpg-enc-private-key)
          UPDATE_MIRROR: $(UpdateMirror)
          GPG_PUBLIC_KEY2: $(sonic-gpg-public-key-2)
        name: publish
        displayName: 'Publish Mirror'
      jobGroups:
      - name: jessie
        variables:
          MIRROR_FILESYSTEM: debian
          MIRROR_URL: 'http://deb.debian.org/debian'
          MIRROR_DISTRIBUTIONS: 'jessie,jessie-updates'
          MIRROR_ARICHTECTURES: 'amd64,armhf'
      - name: stretch
        extName: '_ext'
        dependsOn: jessie
        variables:
          MIRROR_FILESYSTEM: debian
          MIRROR_URL: 'http://deb.debian.org/debian'
          MIRROR_DISTRIBUTIONS: 'stretch,stretch-updates,stretch-backports'
    
