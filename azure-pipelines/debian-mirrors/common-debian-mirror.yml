# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool: sonic-mirror-build

steps:
- task: AzureKeyVault@1
  inputs:
    azureSubscription: 'Network Dev Environment -- SONiC 2 (No ExpressRoute)(90318812-d77d-426d-90a3-44997faf17f4)'
    KeyVaultName: 'sonic-kv'
    SecretsFilter: 'sonic-gpg-passphrase,sonic-gpg-enc-private-key'
    RunAsPreJob: true
- template: ../templates/prepare-mirror-agent.yaml
- bash: |
    # Mount storage containers for debian mirrors
    if [ -z "$(StorageAccount)" ]; then
      echo "The stroage account not set" 1>&2
      exit 1
    fi
    echo 'Mount storage containers for debian mirrors'
    BLOBFUSE_WEB_PATH=/blobfuse-$(StorageAccount)-web
    BLOBFUSE_APTLY_PATH=/blobfuse-$(StorageAccount)-aptly
    if ! mount | grep -q "$BLOBFUSE_WEB_PATH"; then
      sudo mkdir -p "$BLOBFUSE_WEB_PATH" "$BLOBFUSE_APTLY_PATH"
      sudo chmod a+rx "$BLOBFUSE_WEB_PATH" "$BLOBFUSE_APTLY_PATH"
      export AZURE_STORAGE_ACCOUNT="$(StorageAccount)"
      export AZURE_STORAGE_SAS_TOKEN="$(StorageAccountSasToken)"
      sudo -E blobfuse "$BLOBFUSE_WEB_PATH" --container-name='$web' --tmp-path=/data/blobfuse-$(StorageAccount)-web -o attr_timeout=240 -o entry_timeout=240 -o negative_timeout=120 -o allow_other
      sudo -E blobfuse "$BLOBFUSE_APTLY_PATH" --container-name='aptly' --tmp-path=/data/blobfuse-$(StorageAccount)-aptly -o attr_timeout=240 -o entry_timeout=240 -o negative_timeout=120 -o allow_other
    fi
    # Validate the mount results
    if ! mount | grep -q "$BLOBFUSE_WEB_PATH"; then
      echo "Failed to mount $BLOBFUSE_WEB_PATH" 1>&2
      exit 1
    fi
    if ! mount | grep -q "$BLOBFUSE_APTLY_PATH"; then
      echo "Failed to mount $BLOBFUSE_APTLY_PATH" 1>&2
      exit 1
    fi
    echo 'Init is complete'
  displayName: 'Run init script'
- bash: |
    echo "$(sonic-gpg-enc-private-key)" > "encrypted_private_key.gpg"
    scripts/mirror/aptly.sh $(StorageAccount) "$(Distribution)" "$(CreateDB)" "$(sonic-gpg-passphrase)"
  displayName: 'Update and publish debian mirrors by aptly'
- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

